#!/usr/bin/env python

import re
import sys
from subprocess import Popen, PIPE, call


def vcall(cmd, *args, **kwargs):
    print ' '.join(cmd)
    return call(cmd, *args, **kwargs)


# Get the existing ones.
existing = {}
proc = Popen(['npm', 'list'], stdout=PIPE)
for line in proc.stdout:
    m = re.search(r'(\w+)@([\d\.]+)$', line.strip())
    if not m:
        continue
    name, version = m.groups()
    version = tuple(int(x) for x in version.split('.'))
    existing[name] = version


if len(sys.argv) == 1:
    fhs = [sys.stdin]
else:
    fhs = [open(x) for x in sys.argv[1:]]


for fh in fhs:
    for line in fh:
        line = line.strip()
        if not line or line.startswith('#'):
            continue

        m = re.match(r'(\w+)\s*(==)\s*([\d\.]+)', line)
        if m:
            name, op, version_str = m.groups()
            version = tuple(int(x) for x in version_str.split('.'))
        else:
            name = line
            op = None
            version_str = None

        if op is None:
            if name not in existing:
                vcall(['npm', 'install', name])

        elif op == '==':
            if name not in existing or existing[name] != version:
                vcall(['npm', 'install', '%s@%s' % (name, version_str)])

        else:
            print 'Unknown op in', repr(line)


